{
  "openapi": "3.0.0",
  "info": {
    "title": "examen_vanguardia",
    "version": "0.0.1",
    "description": "Examen de Vanguardia",
    "contact": {
      "name": "Willian Caceres",
      "email": "williamddcc_@hotmail.es"
    }
  },
  "paths": {
    "/detallefacturas/count": {
      "get": {
        "x-controller-name": "DetallefacturaController",
        "x-operation-name": "count",
        "tags": [
          "DetallefacturaController"
        ],
        "responses": {
          "200": {
            "description": "Detallefactura model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Detallefactura.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Detallefactura>"
                }
              }
            }
          }
        ],
        "operationId": "DetallefacturaController.count"
      }
    },
    "/detallefacturas/{id}": {
      "put": {
        "x-controller-name": "DetallefacturaController",
        "x-operation-name": "replaceById",
        "tags": [
          "DetallefacturaController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detallefactura PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Detallefactura"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "DetallefacturaController.replaceById"
      },
      "patch": {
        "x-controller-name": "DetallefacturaController",
        "x-operation-name": "updateById",
        "tags": [
          "DetallefacturaController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detallefactura PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DetallefacturaPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "DetallefacturaController.updateById"
      },
      "get": {
        "x-controller-name": "DetallefacturaController",
        "x-operation-name": "findById",
        "tags": [
          "DetallefacturaController"
        ],
        "responses": {
          "200": {
            "description": "Detallefactura model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetallefacturaWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detallefactura.Filter"
                }
              }
            }
          }
        ],
        "operationId": "DetallefacturaController.findById"
      },
      "delete": {
        "x-controller-name": "DetallefacturaController",
        "x-operation-name": "deleteById",
        "tags": [
          "DetallefacturaController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Detallefactura DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "DetallefacturaController.deleteById"
      }
    },
    "/detallefacturas": {
      "post": {
        "x-controller-name": "DetallefacturaController",
        "x-operation-name": "create",
        "tags": [
          "DetallefacturaController"
        ],
        "responses": {
          "200": {
            "description": "Detallefactura model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detallefactura"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewDetallefactura"
              }
            }
          }
        },
        "operationId": "DetallefacturaController.create"
      },
      "patch": {
        "x-controller-name": "DetallefacturaController",
        "x-operation-name": "updateAll",
        "tags": [
          "DetallefacturaController"
        ],
        "responses": {
          "200": {
            "description": "Detallefactura PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Detallefactura.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Detallefactura>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DetallefacturaPartial"
              }
            }
          }
        },
        "operationId": "DetallefacturaController.updateAll"
      },
      "get": {
        "x-controller-name": "DetallefacturaController",
        "x-operation-name": "find",
        "tags": [
          "DetallefacturaController"
        ],
        "responses": {
          "200": {
            "description": "Array of Detallefactura model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DetallefacturaWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detallefactura.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "DetallefacturaController.find"
      }
    },
    "/facturas/count": {
      "get": {
        "x-controller-name": "FacturaController",
        "x-operation-name": "count",
        "tags": [
          "FacturaController"
        ],
        "responses": {
          "200": {
            "description": "Factura model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Factura.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Factura>"
                }
              }
            }
          }
        ],
        "operationId": "FacturaController.count"
      }
    },
    "/facturas/{id}": {
      "put": {
        "x-controller-name": "FacturaController",
        "x-operation-name": "replaceById",
        "tags": [
          "FacturaController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Factura PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Factura"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "FacturaController.replaceById"
      },
      "patch": {
        "x-controller-name": "FacturaController",
        "x-operation-name": "updateById",
        "tags": [
          "FacturaController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Factura PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FacturaPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "FacturaController.updateById"
      },
      "get": {
        "x-controller-name": "FacturaController",
        "x-operation-name": "findById",
        "tags": [
          "FacturaController"
        ],
        "responses": {
          "200": {
            "description": "Factura model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacturaWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Factura.Filter"
                }
              }
            }
          }
        ],
        "operationId": "FacturaController.findById"
      },
      "delete": {
        "x-controller-name": "FacturaController",
        "x-operation-name": "deleteById",
        "tags": [
          "FacturaController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Factura DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "FacturaController.deleteById"
      }
    },
    "/facturas": {
      "post": {
        "x-controller-name": "FacturaController",
        "x-operation-name": "create",
        "tags": [
          "FacturaController"
        ],
        "responses": {
          "200": {
            "description": "Factura model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Factura"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewFactura"
              }
            }
          }
        },
        "operationId": "FacturaController.create"
      },
      "patch": {
        "x-controller-name": "FacturaController",
        "x-operation-name": "updateAll",
        "tags": [
          "FacturaController"
        ],
        "responses": {
          "200": {
            "description": "Factura PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Factura.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Factura>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FacturaPartial"
              }
            }
          }
        },
        "operationId": "FacturaController.updateAll"
      },
      "get": {
        "x-controller-name": "FacturaController",
        "x-operation-name": "find",
        "tags": [
          "FacturaController"
        ],
        "responses": {
          "200": {
            "description": "Array of Factura model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FacturaWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Factura.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "FacturaController.find"
      }
    },
    "/productos/count": {
      "get": {
        "x-controller-name": "ProductosController",
        "x-operation-name": "count",
        "tags": [
          "ProductosController"
        ],
        "responses": {
          "200": {
            "description": "Productos model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Productos.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Productos>"
                }
              }
            }
          }
        ],
        "operationId": "ProductosController.count"
      }
    },
    "/productos/{id}": {
      "put": {
        "x-controller-name": "ProductosController",
        "x-operation-name": "replaceById",
        "tags": [
          "ProductosController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Productos PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Productos"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ProductosController.replaceById"
      },
      "patch": {
        "x-controller-name": "ProductosController",
        "x-operation-name": "updateById",
        "tags": [
          "ProductosController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Productos PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductosPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ProductosController.updateById"
      },
      "get": {
        "x-controller-name": "ProductosController",
        "x-operation-name": "findById",
        "tags": [
          "ProductosController"
        ],
        "responses": {
          "200": {
            "description": "Productos model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductosWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Productos.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ProductosController.findById"
      },
      "delete": {
        "x-controller-name": "ProductosController",
        "x-operation-name": "deleteById",
        "tags": [
          "ProductosController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Productos DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "ProductosController.deleteById"
      }
    },
    "/productos": {
      "post": {
        "x-controller-name": "ProductosController",
        "x-operation-name": "create",
        "tags": [
          "ProductosController"
        ],
        "responses": {
          "200": {
            "description": "Productos model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Productos"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProductos"
              }
            }
          }
        },
        "operationId": "ProductosController.create"
      },
      "patch": {
        "x-controller-name": "ProductosController",
        "x-operation-name": "updateAll",
        "tags": [
          "ProductosController"
        ],
        "responses": {
          "200": {
            "description": "Productos PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Productos.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Productos>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductosPartial"
              }
            }
          }
        },
        "operationId": "ProductosController.updateAll"
      },
      "get": {
        "x-controller-name": "ProductosController",
        "x-operation-name": "find",
        "tags": [
          "ProductosController"
        ],
        "responses": {
          "200": {
            "description": "Array of Productos model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductosWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Productos.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "ProductosController.find"
      }
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "components": {
    "schemas": {
      "Detallefactura": {
        "title": "Detallefactura",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "facturaid": {
            "type": "string"
          },
          "productoid": {
            "type": "string"
          },
          "cantidad": {
            "type": "number"
          },
          "productosId": {
            "type": "string"
          },
          "facturaId": {
            "type": "string"
          }
        },
        "required": [
          "facturaid",
          "productoid",
          "cantidad"
        ],
        "additionalProperties": false
      },
      "NewDetallefactura": {
        "title": "NewDetallefactura",
        "type": "object",
        "description": "(tsType: Omit<Detallefactura, 'id'>, schemaOptions: { title: 'NewDetallefactura', exclude: [ 'id' ] })",
        "properties": {
          "facturaid": {
            "type": "string"
          },
          "productoid": {
            "type": "string"
          },
          "cantidad": {
            "type": "number"
          },
          "productosId": {
            "type": "string"
          },
          "facturaId": {
            "type": "string"
          }
        },
        "required": [
          "facturaid",
          "productoid",
          "cantidad"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Detallefactura, 'id'>"
      },
      "FacturaWithRelations": {
        "title": "FacturaWithRelations",
        "type": "object",
        "description": "(tsType: FacturaWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "correlativo": {
            "type": "number"
          },
          "fecha": {
            "type": "string"
          },
          "cliente": {
            "type": "string"
          },
          "direccion": {
            "type": "string"
          },
          "telefono": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "facturacondetalle": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DetallefacturaWithRelations"
            }
          }
        },
        "required": [
          "correlativo",
          "fecha",
          "cliente",
          "direccion",
          "telefono",
          "email"
        ],
        "additionalProperties": false,
        "x-typescript-type": "FacturaWithRelations"
      },
      "ProductosWithRelations": {
        "title": "ProductosWithRelations",
        "type": "object",
        "description": "(tsType: ProductosWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "descripcion": {
            "type": "string"
          },
          "valor": {
            "type": "number"
          },
          "productosid": {
            "type": "string"
          },
          "productoid": {
            "type": "string"
          },
          "productodetalle": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DetallefacturaWithRelations"
            }
          },
          "productos": {
            "$ref": "#/components/schemas/DetallefacturaWithRelations"
          },
          "productofact": {
            "$ref": "#/components/schemas/DetallefacturaWithRelations"
          }
        },
        "required": [
          "descripcion",
          "valor"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ProductosWithRelations"
      },
      "DetallefacturaWithRelations": {
        "title": "DetallefacturaWithRelations",
        "type": "object",
        "description": "(tsType: DetallefacturaWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "facturaid": {
            "type": "string"
          },
          "productoid": {
            "type": "string"
          },
          "cantidad": {
            "type": "number"
          },
          "productosId": {
            "type": "string"
          },
          "facturaId": {
            "type": "string"
          },
          "factura": {
            "$ref": "#/components/schemas/FacturaWithRelations"
          },
          "productos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductosWithRelations"
            }
          }
        },
        "required": [
          "facturaid",
          "productoid",
          "cantidad"
        ],
        "additionalProperties": false,
        "x-typescript-type": "DetallefacturaWithRelations"
      },
      "DetallefacturaPartial": {
        "title": "DetallefacturaPartial",
        "type": "object",
        "description": "(tsType: Partial<Detallefactura>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "facturaid": {
            "type": "string"
          },
          "productoid": {
            "type": "string"
          },
          "cantidad": {
            "type": "number"
          },
          "productosId": {
            "type": "string"
          },
          "facturaId": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Detallefactura>"
      },
      "Factura": {
        "title": "Factura",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "correlativo": {
            "type": "number"
          },
          "fecha": {
            "type": "string"
          },
          "cliente": {
            "type": "string"
          },
          "direccion": {
            "type": "string"
          },
          "telefono": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "correlativo",
          "fecha",
          "cliente",
          "direccion",
          "telefono",
          "email"
        ],
        "additionalProperties": false
      },
      "NewFactura": {
        "title": "NewFactura",
        "type": "object",
        "description": "(tsType: Omit<Factura, 'id'>, schemaOptions: { title: 'NewFactura', exclude: [ 'id' ] })",
        "properties": {
          "correlativo": {
            "type": "number"
          },
          "fecha": {
            "type": "string"
          },
          "cliente": {
            "type": "string"
          },
          "direccion": {
            "type": "string"
          },
          "telefono": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "correlativo",
          "fecha",
          "cliente",
          "direccion",
          "telefono",
          "email"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Factura, 'id'>"
      },
      "FacturaPartial": {
        "title": "FacturaPartial",
        "type": "object",
        "description": "(tsType: Partial<Factura>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "correlativo": {
            "type": "number"
          },
          "fecha": {
            "type": "string"
          },
          "cliente": {
            "type": "string"
          },
          "direccion": {
            "type": "string"
          },
          "telefono": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Factura>"
      },
      "Productos": {
        "title": "Productos",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "descripcion": {
            "type": "string"
          },
          "valor": {
            "type": "number"
          },
          "productosid": {
            "type": "string"
          },
          "productoid": {
            "type": "string"
          }
        },
        "required": [
          "descripcion",
          "valor"
        ],
        "additionalProperties": false
      },
      "NewProductos": {
        "title": "NewProductos",
        "type": "object",
        "description": "(tsType: Omit<Productos, 'id'>, schemaOptions: { title: 'NewProductos', exclude: [ 'id' ] })",
        "properties": {
          "descripcion": {
            "type": "string"
          },
          "valor": {
            "type": "number"
          },
          "productosid": {
            "type": "string"
          },
          "productoid": {
            "type": "string"
          }
        },
        "required": [
          "descripcion",
          "valor"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Productos, 'id'>"
      },
      "ProductosPartial": {
        "title": "ProductosPartial",
        "type": "object",
        "description": "(tsType: Partial<Productos>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "descripcion": {
            "type": "string"
          },
          "valor": {
            "type": "number"
          },
          "productosid": {
            "type": "string"
          },
          "productoid": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Productos>"
      },
      "loopback.Count": {
        "type": "object",
        "title": "loopback.Count",
        "x-typescript-type": "@loopback/repository#Count",
        "properties": {
          "count": {
            "type": "number"
          }
        }
      },
      "Detallefactura.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Detallefactura.ScopeFilter"
      },
      "Detallefactura.IncludeFilter.Items": {
        "title": "Detallefactura.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/Detallefactura.ScopeFilter"
          }
        }
      },
      "Detallefactura.Filter": {
        "type": "object",
        "title": "Detallefactura.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "facturaid": {
                    "type": "boolean"
                  },
                  "productoid": {
                    "type": "boolean"
                  },
                  "cantidad": {
                    "type": "boolean"
                  },
                  "productosId": {
                    "type": "boolean"
                  },
                  "facturaId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "facturaid",
                    "productoid",
                    "cantidad",
                    "productosId",
                    "facturaId"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Detallefactura.Fields"
          },
          "include": {
            "title": "Detallefactura.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detallefactura.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Detallefactura>"
      },
      "Detallefactura.Filter1": {
        "type": "object",
        "title": "Detallefactura.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Detallefactura.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "facturaid": {
                    "type": "boolean"
                  },
                  "productoid": {
                    "type": "boolean"
                  },
                  "cantidad": {
                    "type": "boolean"
                  },
                  "productosId": {
                    "type": "boolean"
                  },
                  "facturaId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "facturaid",
                    "productoid",
                    "cantidad",
                    "productosId",
                    "facturaId"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Detallefactura.Fields"
          },
          "include": {
            "title": "Detallefactura.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Detallefactura.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Detallefactura>"
      },
      "Factura.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Factura.ScopeFilter"
      },
      "Factura.IncludeFilter.Items": {
        "title": "Factura.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/Factura.ScopeFilter"
          }
        }
      },
      "Factura.Filter": {
        "type": "object",
        "title": "Factura.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "correlativo": {
                    "type": "boolean"
                  },
                  "fecha": {
                    "type": "boolean"
                  },
                  "cliente": {
                    "type": "boolean"
                  },
                  "direccion": {
                    "type": "boolean"
                  },
                  "telefono": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "correlativo",
                    "fecha",
                    "cliente",
                    "direccion",
                    "telefono",
                    "email"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Factura.Fields"
          },
          "include": {
            "title": "Factura.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Factura.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Factura>"
      },
      "Factura.Filter1": {
        "type": "object",
        "title": "Factura.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Factura.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "correlativo": {
                    "type": "boolean"
                  },
                  "fecha": {
                    "type": "boolean"
                  },
                  "cliente": {
                    "type": "boolean"
                  },
                  "direccion": {
                    "type": "boolean"
                  },
                  "telefono": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "correlativo",
                    "fecha",
                    "cliente",
                    "direccion",
                    "telefono",
                    "email"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Factura.Fields"
          },
          "include": {
            "title": "Factura.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Factura.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Factura>"
      },
      "Productos.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Productos.ScopeFilter"
      },
      "Productos.IncludeFilter.Items": {
        "title": "Productos.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/Productos.ScopeFilter"
          }
        }
      },
      "Productos.Filter": {
        "type": "object",
        "title": "Productos.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "descripcion": {
                    "type": "boolean"
                  },
                  "valor": {
                    "type": "boolean"
                  },
                  "productosid": {
                    "type": "boolean"
                  },
                  "productoid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "descripcion",
                    "valor",
                    "productosid",
                    "productoid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Productos.Fields"
          },
          "include": {
            "title": "Productos.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Productos.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Productos>"
      },
      "Productos.Filter1": {
        "type": "object",
        "title": "Productos.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Productos.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "descripcion": {
                    "type": "boolean"
                  },
                  "valor": {
                    "type": "boolean"
                  },
                  "productosid": {
                    "type": "boolean"
                  },
                  "productoid": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "descripcion",
                    "valor",
                    "productosid",
                    "productoid"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Productos.Fields"
          },
          "include": {
            "title": "Productos.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Productos.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Productos>"
      }
    }
  }
}
